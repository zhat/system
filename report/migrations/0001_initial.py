# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-14 17:46
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmazonOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=32)),
                ('channel', models.CharField(max_length=40)),
                ('order_id', models.CharField(max_length=80)),
                ('status', models.CharField(max_length=20)),
                ('payment_method', models.CharField(max_length=40)),
                ('purchase_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('amazon_updated_at', models.DateTimeField()),
                ('lastest_ship_date', models.DateTimeField()),
                ('lastest_delivery_date', models.DateTimeField()),
                ('customer_name', models.CharField(max_length=40)),
                ('email', models.CharField(max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country_code', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state_or_region', models.CharField(max_length=40)),
                ('postal_code', models.CharField(blank=True, max_length=40, null=True)),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'amazon_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AmazonOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amazon_item_id', models.CharField(max_length=40)),
                ('title', models.CharField(max_length=255)),
                ('asin', models.CharField(db_column='ASIN', max_length=120)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('qty', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True)),
                ('gift_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('promotion_id', models.CharField(blank=True, max_length=256, null=True)),
                ('promotion_discount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('shipping_tax', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('condition_id', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('push_status', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'amazon_order_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EbayOrderFull',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(max_length=50)),
                ('order_id', models.CharField(max_length=255)),
                ('record_number', models.BigIntegerField()),
                ('order_status', models.CharField(max_length=50)),
                ('adjustment_amount', models.CharField(max_length=50)),
                ('amount_paid', models.CharField(max_length=50)),
                ('amount_saved', models.CharField(max_length=50)),
                ('created_time', models.DateTimeField()),
                ('payment_methods', models.CharField(max_length=50)),
                ('seller_email', models.CharField(max_length=255)),
                ('sub_total', models.CharField(max_length=50)),
                ('total', models.CharField(max_length=50)),
                ('buyer_user_id', models.CharField(max_length=255)),
                ('paid_time', models.DateTimeField()),
                ('shipped_time', models.DateTimeField()),
                ('integrated_merchant_credit_card_enabled', models.IntegerField()),
                ('eias_token', models.CharField(max_length=255)),
                ('payment_hold_status', models.CharField(max_length=50)),
                ('is_multi_leg_shipping', models.IntegerField()),
                ('seller_user_id', models.CharField(max_length=255)),
                ('seller_eias_token', models.CharField(blank=True, max_length=255, null=True)),
                ('cancel_status', models.CharField(blank=True, max_length=50, null=True)),
                ('extended_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('contains_ebay_plus_transaction', models.IntegerField(blank=True, null=True)),
                ('checkout_status_s', models.CharField(blank=True, max_length=40, null=True)),
                ('checkout_status', models.TextField(blank=True, null=True)),
                ('shipping_country', models.CharField(blank=True, max_length=60, null=True)),
                ('shipping_region', models.CharField(blank=True, max_length=60, null=True)),
                ('shipping_postcode', models.CharField(blank=True, max_length=40, null=True)),
                ('shipping_details', models.TextField(blank=True, null=True)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('shipping_service_selected', models.TextField(blank=True, null=True)),
                ('external_transaction', models.TextField(blank=True, null=True)),
                ('transaction_array', models.TextField(blank=True, null=True)),
                ('monetary_details', models.TextField(blank=True, null=True)),
                ('last_modified_time', models.DateTimeField()),
                ('last_fetch_time', models.DateTimeField()),
                ('has_pushed', models.IntegerField()),
                ('process_status', models.IntegerField()),
            ],
            options={
                'db_table': 'ebay_order_full',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EbayOrderFullItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=255)),
                ('transaction_id', models.CharField(max_length=255)),
                ('transaction_site_id', models.CharField(max_length=50)),
                ('email', models.CharField(blank=True, max_length=80, null=True)),
                ('item_id', models.CharField(blank=True, max_length=255, null=True)),
                ('item_sku', models.CharField(blank=True, max_length=50, null=True)),
                ('item_title', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity_purchased', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_price', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ebay_order_full_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LightOrder',
            fields=[
                ('entity_id', models.AutoField(primary_key=True, serialize=False)),
                ('platform', models.CharField(max_length=60)),
                ('order_id', models.CharField(max_length=50)),
                ('light_order_id', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=32)),
                ('status', models.CharField(max_length=32)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('subtotal', models.DecimalField(decimal_places=4, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('shipping_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_canceled', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_paid', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('total_refunded', models.DecimalField(decimal_places=4, max_digits=12)),
                ('gift_message', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=4, max_digits=12)),
                ('customer_email', models.CharField(max_length=255)),
                ('customer_firstname', models.CharField(max_length=255)),
                ('customer_lastname', models.CharField(max_length=255)),
                ('customer_middlename', models.CharField(max_length=255)),
                ('global_currency_code', models.CharField(max_length=3)),
                ('order_currency_code', models.CharField(max_length=255)),
                ('remote_ip', models.CharField(max_length=255)),
                ('shipping_method', models.CharField(max_length=255)),
                ('country_id', models.CharField(max_length=20)),
                ('region_id', models.IntegerField()),
                ('region', models.CharField(max_length=40)),
                ('city', models.CharField(max_length=40)),
                ('postcode', models.CharField(max_length=40)),
                ('street', models.TextField()),
                ('shipping_firstname', models.CharField(max_length=255)),
                ('shipping_middlename', models.CharField(max_length=255)),
                ('shipping_lastname', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=40)),
                ('customer_note', models.TextField(blank=True, null=True)),
                ('avs', models.CharField(max_length=4)),
                ('payment_method', models.CharField(max_length=40)),
                ('light_created_at', models.DateTimeField()),
                ('paid_time', models.DateTimeField()),
                ('light_updated_at', models.DateTimeField()),
                ('process_status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'light_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LightOrderItem',
            fields=[
                ('entity_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('light_item_id', models.IntegerField()),
                ('weight', models.DecimalField(decimal_places=4, max_digits=12)),
                ('sku', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('free_shipping', models.SmallIntegerField()),
                ('is_qty_decimal', models.SmallIntegerField()),
                ('no_discount', models.SmallIntegerField()),
                ('qty_canceled', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_ordered', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_refunded', models.DecimalField(decimal_places=4, max_digits=12)),
                ('qty_shipped', models.DecimalField(decimal_places=4, max_digits=12)),
                ('price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('base_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('original_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('tax_percent', models.DecimalField(decimal_places=4, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('tax_invoiced', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_percent', models.DecimalField(decimal_places=4, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('amount_refunded', models.DecimalField(decimal_places=4, max_digits=12)),
                ('row_total', models.DecimalField(decimal_places=4, max_digits=12)),
                ('gift_message_id', models.IntegerField()),
                ('postcode', models.CharField(max_length=40)),
                ('region', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('street', models.TextField()),
                ('gift_message', models.IntegerField()),
                ('light_created_at', models.DateTimeField()),
                ('light_updated_at', models.DateTimeField()),
                ('ship_at', models.DateTimeField()),
                ('push_status', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'light_order_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AsinInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('sku', models.CharField(max_length=128, null=True, verbose_name='sku')),
                ('asin', models.CharField(max_length=128, null=True, verbose_name='asin')),
                ('platform', models.CharField(max_length=32, null=True, verbose_name='账号')),
                ('station', models.CharField(max_length=64, null=True, verbose_name='站点')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': '每日asin信息',
                'verbose_name_plural': '每日asin信息',
            },
        ),
        migrations.CreateModel(
            name='ReportData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('sku', models.CharField(max_length=128, null=True, verbose_name='sku')),
                ('asin', models.CharField(max_length=128, null=True, verbose_name='asin')),
                ('platform', models.CharField(max_length=32, null=True, verbose_name='账号')),
                ('station', models.CharField(max_length=64, null=True, verbose_name='站点')),
                ('qty', models.IntegerField(null=True, verbose_name='订单数量')),
                ('currencycode', models.CharField(max_length=32, null=True, verbose_name='币种')),
                ('deduction', models.FloatField(null=True, verbose_name='折扣额')),
                ('price', models.FloatField(null=True, verbose_name='金额')),
                ('count', models.IntegerField(null=True, verbose_name='总数')),
                ('sametermrate', models.FloatField(null=True, verbose_name='同比')),
                ('weekrate', models.FloatField(null=True, verbose_name='周环比')),
                ('monthrate', models.FloatField(null=True, verbose_name='月环比')),
                ('status', models.CharField(max_length=32, null=True, verbose_name='订单状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_time', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': '单品每日统计结果表',
                'verbose_name_plural': '单品每日统计结果表',
            },
        ),
        migrations.CreateModel(
            name='StatisticsData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('sku', models.CharField(max_length=128, null=True, verbose_name='sku')),
                ('asin', models.CharField(max_length=128, null=True, verbose_name='asin')),
                ('platform', models.CharField(max_length=32, null=True, verbose_name='账号')),
                ('station', models.CharField(max_length=64, null=True, verbose_name='站点')),
                ('qty', models.IntegerField(null=True, verbose_name='订单数量')),
                ('currencycode', models.CharField(max_length=32, null=True, verbose_name='币种')),
                ('deduction', models.FloatField(null=True, verbose_name='折扣额')),
                ('price', models.FloatField(null=True, verbose_name='金额')),
                ('count', models.IntegerField(null=True, verbose_name='总数')),
                ('sametermrate', models.FloatField(null=True, verbose_name='同比')),
                ('weekrate', models.FloatField(null=True, verbose_name='周环比')),
                ('monthrate', models.FloatField(null=True, verbose_name='月环比')),
                ('status', models.CharField(max_length=32, null=True, verbose_name='订单状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': '单品每日统计临时表',
                'verbose_name_plural': '单品每日统计临时表',
            },
        ),
        migrations.CreateModel(
            name='StatisticsOfPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('platform', models.CharField(max_length=32, null=True, verbose_name='账号')),
                ('station', models.CharField(max_length=64, null=True, verbose_name='站点')),
                ('qty', models.IntegerField(null=True, verbose_name='订单数量')),
                ('count', models.IntegerField(null=True, verbose_name='总数')),
                ('currencycode', models.CharField(max_length=32, null=True, verbose_name='币种')),
                ('site_price', models.FloatField(null=True, verbose_name='站点金额')),
                ('dollar_price', models.FloatField(null=True, verbose_name='美元金额')),
                ('RMB_price', models.FloatField(null=True, verbose_name='人民币金额')),
                ('sametermrate', models.FloatField(null=True, verbose_name='同比')),
                ('weekrate', models.FloatField(null=True, verbose_name='周环比')),
                ('monthrate', models.FloatField(null=True, verbose_name='月环比')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name_plural': '站点每日总计',
                'verbose_name': '站点每日总计',
                'ordering': ['-date'],
            },
        ),
    ]
